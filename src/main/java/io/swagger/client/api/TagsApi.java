/*
 * Nexus Repository Manager REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.27.0-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.ApiCallback;
import io.swagger.client.ApiClient;
import io.swagger.client.ApiException;
import io.swagger.client.ApiResponse;
import io.swagger.client.Configuration;
import io.swagger.client.Pair;
import io.swagger.client.ProgressRequestBody;
import io.swagger.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import io.swagger.client.model.BaseTagXO;
import io.swagger.client.model.PageTagXO;
import io.swagger.client.model.TagXO;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class TagsApi {
    private ApiClient apiClient;

    public TagsApi() {
        this(Configuration.getDefaultApiClient());
    }

    public TagsApi(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return apiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    /**
     * Build call for associate
     * @param tagName Tag to associate to the matched components (required)
     * @param wait The query waits until the indexing is complete (optional, default to true)
     * @param q Query by keyword (optional)
     * @param repository Repository name (optional)
     * @param format Query by format (optional)
     * @param group Component group (optional)
     * @param name Component name (optional)
     * @param version Component version (optional)
     * @param md5 Specific MD5 hash of component&#x27;s asset (optional)
     * @param sha1 Specific SHA-1 hash of component&#x27;s asset (optional)
     * @param sha256 Specific SHA-256 hash of component&#x27;s asset (optional)
     * @param sha512 Specific SHA-512 hash of component&#x27;s asset (optional)
     * @param prerelease Prerelease version flag (optional)
     * @param conanBaseVersion baseVersion (optional)
     * @param conanChannel channel (optional)
     * @param dockerImageName Docker image name (optional)
     * @param dockerImageTag Docker image tag (optional)
     * @param dockerLayerId Docker layer ID (optional)
     * @param dockerContentDigest Docker content digest (optional)
     * @param mavenGroupId Maven groupId (optional)
     * @param mavenArtifactId Maven artifactId (optional)
     * @param mavenBaseVersion Maven base version (optional)
     * @param mavenExtension Maven extension of component&#x27;s asset (optional)
     * @param mavenClassifier Maven classifier of component&#x27;s asset (optional)
     * @param npmScope npm scope (optional)
     * @param nugetId NuGet id (optional)
     * @param nugetTags NuGet tags (optional)
     * @param p2PluginName p2 plugin name (optional)
     * @param pypiClassifiers PyPI classifiers (optional)
     * @param pypiDescription PyPI description (optional)
     * @param pypiKeywords PyPI keywords (optional)
     * @param pypiSummary PyPI summary (optional)
     * @param rubygemsDescription RubyGems description (optional)
     * @param rubygemsPlatform RubyGems platform (optional)
     * @param rubygemsSummary RubyGems summary (optional)
     * @param tag Component tag (optional)
     * @param yumArchitecture Yum architecture (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call associateCall(String tagName, Boolean wait, String q, String repository, String format, String group, String name, String version, String md5, String sha1, String sha256, String sha512, String prerelease, String conanBaseVersion, String conanChannel, String dockerImageName, String dockerImageTag, String dockerLayerId, String dockerContentDigest, String mavenGroupId, String mavenArtifactId, String mavenBaseVersion, String mavenExtension, String mavenClassifier, String npmScope, String nugetId, String nugetTags, String p2PluginName, String pypiClassifiers, String pypiDescription, String pypiKeywords, String pypiSummary, String rubygemsDescription, String rubygemsPlatform, String rubygemsSummary, String tag, String yumArchitecture, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/v1/tags/associate/{tagName}"
            .replaceAll("\\{" + "tagName" + "\\}", apiClient.escapeString(tagName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (wait != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("wait", wait));
        if (q != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("q", q));
        if (repository != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("repository", repository));
        if (format != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("format", format));
        if (group != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("group", group));
        if (name != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("name", name));
        if (version != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("version", version));
        if (md5 != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("md5", md5));
        if (sha1 != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("sha1", sha1));
        if (sha256 != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("sha256", sha256));
        if (sha512 != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("sha512", sha512));
        if (prerelease != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("prerelease", prerelease));
        if (conanBaseVersion != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("conan.baseVersion", conanBaseVersion));
        if (conanChannel != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("conan.channel", conanChannel));
        if (dockerImageName != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("docker.imageName", dockerImageName));
        if (dockerImageTag != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("docker.imageTag", dockerImageTag));
        if (dockerLayerId != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("docker.layerId", dockerLayerId));
        if (dockerContentDigest != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("docker.contentDigest", dockerContentDigest));
        if (mavenGroupId != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("maven.groupId", mavenGroupId));
        if (mavenArtifactId != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("maven.artifactId", mavenArtifactId));
        if (mavenBaseVersion != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("maven.baseVersion", mavenBaseVersion));
        if (mavenExtension != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("maven.extension", mavenExtension));
        if (mavenClassifier != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("maven.classifier", mavenClassifier));
        if (npmScope != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("npm.scope", npmScope));
        if (nugetId != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("nuget.id", nugetId));
        if (nugetTags != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("nuget.tags", nugetTags));
        if (p2PluginName != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("p2.pluginName", p2PluginName));
        if (pypiClassifiers != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("pypi.classifiers", pypiClassifiers));
        if (pypiDescription != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("pypi.description", pypiDescription));
        if (pypiKeywords != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("pypi.keywords", pypiKeywords));
        if (pypiSummary != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("pypi.summary", pypiSummary));
        if (rubygemsDescription != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("rubygems.description", rubygemsDescription));
        if (rubygemsPlatform != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("rubygems.platform", rubygemsPlatform));
        if (rubygemsSummary != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("rubygems.summary", rubygemsSummary));
        if (tag != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("tag", tag));
        if (yumArchitecture != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("yum.architecture", yumArchitecture));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call associateValidateBeforeCall(String tagName, Boolean wait, String q, String repository, String format, String group, String name, String version, String md5, String sha1, String sha256, String sha512, String prerelease, String conanBaseVersion, String conanChannel, String dockerImageName, String dockerImageTag, String dockerLayerId, String dockerContentDigest, String mavenGroupId, String mavenArtifactId, String mavenBaseVersion, String mavenExtension, String mavenClassifier, String npmScope, String nugetId, String nugetTags, String p2PluginName, String pypiClassifiers, String pypiDescription, String pypiKeywords, String pypiSummary, String rubygemsDescription, String rubygemsPlatform, String rubygemsSummary, String tag, String yumArchitecture, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'tagName' is set
        if (tagName == null) {
            throw new ApiException("Missing the required parameter 'tagName' when calling associate(Async)");
        }
        
        com.squareup.okhttp.Call call = associateCall(tagName, wait, q, repository, format, group, name, version, md5, sha1, sha256, sha512, prerelease, conanBaseVersion, conanChannel, dockerImageName, dockerImageTag, dockerLayerId, dockerContentDigest, mavenGroupId, mavenArtifactId, mavenBaseVersion, mavenExtension, mavenClassifier, npmScope, nugetId, nugetTags, p2PluginName, pypiClassifiers, pypiDescription, pypiKeywords, pypiSummary, rubygemsDescription, rubygemsPlatform, rubygemsSummary, tag, yumArchitecture, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Associate components with a tag
     * 
     * @param tagName Tag to associate to the matched components (required)
     * @param wait The query waits until the indexing is complete (optional, default to true)
     * @param q Query by keyword (optional)
     * @param repository Repository name (optional)
     * @param format Query by format (optional)
     * @param group Component group (optional)
     * @param name Component name (optional)
     * @param version Component version (optional)
     * @param md5 Specific MD5 hash of component&#x27;s asset (optional)
     * @param sha1 Specific SHA-1 hash of component&#x27;s asset (optional)
     * @param sha256 Specific SHA-256 hash of component&#x27;s asset (optional)
     * @param sha512 Specific SHA-512 hash of component&#x27;s asset (optional)
     * @param prerelease Prerelease version flag (optional)
     * @param conanBaseVersion baseVersion (optional)
     * @param conanChannel channel (optional)
     * @param dockerImageName Docker image name (optional)
     * @param dockerImageTag Docker image tag (optional)
     * @param dockerLayerId Docker layer ID (optional)
     * @param dockerContentDigest Docker content digest (optional)
     * @param mavenGroupId Maven groupId (optional)
     * @param mavenArtifactId Maven artifactId (optional)
     * @param mavenBaseVersion Maven base version (optional)
     * @param mavenExtension Maven extension of component&#x27;s asset (optional)
     * @param mavenClassifier Maven classifier of component&#x27;s asset (optional)
     * @param npmScope npm scope (optional)
     * @param nugetId NuGet id (optional)
     * @param nugetTags NuGet tags (optional)
     * @param p2PluginName p2 plugin name (optional)
     * @param pypiClassifiers PyPI classifiers (optional)
     * @param pypiDescription PyPI description (optional)
     * @param pypiKeywords PyPI keywords (optional)
     * @param pypiSummary PyPI summary (optional)
     * @param rubygemsDescription RubyGems description (optional)
     * @param rubygemsPlatform RubyGems platform (optional)
     * @param rubygemsSummary RubyGems summary (optional)
     * @param tag Component tag (optional)
     * @param yumArchitecture Yum architecture (optional)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public void associate(String tagName, Boolean wait, String q, String repository, String format, String group, String name, String version, String md5, String sha1, String sha256, String sha512, String prerelease, String conanBaseVersion, String conanChannel, String dockerImageName, String dockerImageTag, String dockerLayerId, String dockerContentDigest, String mavenGroupId, String mavenArtifactId, String mavenBaseVersion, String mavenExtension, String mavenClassifier, String npmScope, String nugetId, String nugetTags, String p2PluginName, String pypiClassifiers, String pypiDescription, String pypiKeywords, String pypiSummary, String rubygemsDescription, String rubygemsPlatform, String rubygemsSummary, String tag, String yumArchitecture) throws ApiException {
        associateWithHttpInfo(tagName, wait, q, repository, format, group, name, version, md5, sha1, sha256, sha512, prerelease, conanBaseVersion, conanChannel, dockerImageName, dockerImageTag, dockerLayerId, dockerContentDigest, mavenGroupId, mavenArtifactId, mavenBaseVersion, mavenExtension, mavenClassifier, npmScope, nugetId, nugetTags, p2PluginName, pypiClassifiers, pypiDescription, pypiKeywords, pypiSummary, rubygemsDescription, rubygemsPlatform, rubygemsSummary, tag, yumArchitecture);
    }

    /**
     * Associate components with a tag
     * 
     * @param tagName Tag to associate to the matched components (required)
     * @param wait The query waits until the indexing is complete (optional, default to true)
     * @param q Query by keyword (optional)
     * @param repository Repository name (optional)
     * @param format Query by format (optional)
     * @param group Component group (optional)
     * @param name Component name (optional)
     * @param version Component version (optional)
     * @param md5 Specific MD5 hash of component&#x27;s asset (optional)
     * @param sha1 Specific SHA-1 hash of component&#x27;s asset (optional)
     * @param sha256 Specific SHA-256 hash of component&#x27;s asset (optional)
     * @param sha512 Specific SHA-512 hash of component&#x27;s asset (optional)
     * @param prerelease Prerelease version flag (optional)
     * @param conanBaseVersion baseVersion (optional)
     * @param conanChannel channel (optional)
     * @param dockerImageName Docker image name (optional)
     * @param dockerImageTag Docker image tag (optional)
     * @param dockerLayerId Docker layer ID (optional)
     * @param dockerContentDigest Docker content digest (optional)
     * @param mavenGroupId Maven groupId (optional)
     * @param mavenArtifactId Maven artifactId (optional)
     * @param mavenBaseVersion Maven base version (optional)
     * @param mavenExtension Maven extension of component&#x27;s asset (optional)
     * @param mavenClassifier Maven classifier of component&#x27;s asset (optional)
     * @param npmScope npm scope (optional)
     * @param nugetId NuGet id (optional)
     * @param nugetTags NuGet tags (optional)
     * @param p2PluginName p2 plugin name (optional)
     * @param pypiClassifiers PyPI classifiers (optional)
     * @param pypiDescription PyPI description (optional)
     * @param pypiKeywords PyPI keywords (optional)
     * @param pypiSummary PyPI summary (optional)
     * @param rubygemsDescription RubyGems description (optional)
     * @param rubygemsPlatform RubyGems platform (optional)
     * @param rubygemsSummary RubyGems summary (optional)
     * @param tag Component tag (optional)
     * @param yumArchitecture Yum architecture (optional)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Void> associateWithHttpInfo(String tagName, Boolean wait, String q, String repository, String format, String group, String name, String version, String md5, String sha1, String sha256, String sha512, String prerelease, String conanBaseVersion, String conanChannel, String dockerImageName, String dockerImageTag, String dockerLayerId, String dockerContentDigest, String mavenGroupId, String mavenArtifactId, String mavenBaseVersion, String mavenExtension, String mavenClassifier, String npmScope, String nugetId, String nugetTags, String p2PluginName, String pypiClassifiers, String pypiDescription, String pypiKeywords, String pypiSummary, String rubygemsDescription, String rubygemsPlatform, String rubygemsSummary, String tag, String yumArchitecture) throws ApiException {
        com.squareup.okhttp.Call call = associateValidateBeforeCall(tagName, wait, q, repository, format, group, name, version, md5, sha1, sha256, sha512, prerelease, conanBaseVersion, conanChannel, dockerImageName, dockerImageTag, dockerLayerId, dockerContentDigest, mavenGroupId, mavenArtifactId, mavenBaseVersion, mavenExtension, mavenClassifier, npmScope, nugetId, nugetTags, p2PluginName, pypiClassifiers, pypiDescription, pypiKeywords, pypiSummary, rubygemsDescription, rubygemsPlatform, rubygemsSummary, tag, yumArchitecture, null, null);
        return apiClient.execute(call);
    }

    /**
     * Associate components with a tag (asynchronously)
     * 
     * @param tagName Tag to associate to the matched components (required)
     * @param wait The query waits until the indexing is complete (optional, default to true)
     * @param q Query by keyword (optional)
     * @param repository Repository name (optional)
     * @param format Query by format (optional)
     * @param group Component group (optional)
     * @param name Component name (optional)
     * @param version Component version (optional)
     * @param md5 Specific MD5 hash of component&#x27;s asset (optional)
     * @param sha1 Specific SHA-1 hash of component&#x27;s asset (optional)
     * @param sha256 Specific SHA-256 hash of component&#x27;s asset (optional)
     * @param sha512 Specific SHA-512 hash of component&#x27;s asset (optional)
     * @param prerelease Prerelease version flag (optional)
     * @param conanBaseVersion baseVersion (optional)
     * @param conanChannel channel (optional)
     * @param dockerImageName Docker image name (optional)
     * @param dockerImageTag Docker image tag (optional)
     * @param dockerLayerId Docker layer ID (optional)
     * @param dockerContentDigest Docker content digest (optional)
     * @param mavenGroupId Maven groupId (optional)
     * @param mavenArtifactId Maven artifactId (optional)
     * @param mavenBaseVersion Maven base version (optional)
     * @param mavenExtension Maven extension of component&#x27;s asset (optional)
     * @param mavenClassifier Maven classifier of component&#x27;s asset (optional)
     * @param npmScope npm scope (optional)
     * @param nugetId NuGet id (optional)
     * @param nugetTags NuGet tags (optional)
     * @param p2PluginName p2 plugin name (optional)
     * @param pypiClassifiers PyPI classifiers (optional)
     * @param pypiDescription PyPI description (optional)
     * @param pypiKeywords PyPI keywords (optional)
     * @param pypiSummary PyPI summary (optional)
     * @param rubygemsDescription RubyGems description (optional)
     * @param rubygemsPlatform RubyGems platform (optional)
     * @param rubygemsSummary RubyGems summary (optional)
     * @param tag Component tag (optional)
     * @param yumArchitecture Yum architecture (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call associateAsync(String tagName, Boolean wait, String q, String repository, String format, String group, String name, String version, String md5, String sha1, String sha256, String sha512, String prerelease, String conanBaseVersion, String conanChannel, String dockerImageName, String dockerImageTag, String dockerLayerId, String dockerContentDigest, String mavenGroupId, String mavenArtifactId, String mavenBaseVersion, String mavenExtension, String mavenClassifier, String npmScope, String nugetId, String nugetTags, String p2PluginName, String pypiClassifiers, String pypiDescription, String pypiKeywords, String pypiSummary, String rubygemsDescription, String rubygemsPlatform, String rubygemsSummary, String tag, String yumArchitecture, final ApiCallback<Void> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = associateValidateBeforeCall(tagName, wait, q, repository, format, group, name, version, md5, sha1, sha256, sha512, prerelease, conanBaseVersion, conanChannel, dockerImageName, dockerImageTag, dockerLayerId, dockerContentDigest, mavenGroupId, mavenArtifactId, mavenBaseVersion, mavenExtension, mavenClassifier, npmScope, nugetId, nugetTags, p2PluginName, pypiClassifiers, pypiDescription, pypiKeywords, pypiSummary, rubygemsDescription, rubygemsPlatform, rubygemsSummary, tag, yumArchitecture, progressListener, progressRequestListener);
        apiClient.executeAsync(call, callback);
        return call;
    }
    /**
     * Build call for create1
     * @param body  (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call create1Call(TagXO body, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = body;
        
        // create path and map variables
        String localVarPath = "/v1/tags";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call create1ValidateBeforeCall(TagXO body, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        com.squareup.okhttp.Call call = create1Call(body, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Create a tag
     * 
     * @param body  (optional)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public void create1(TagXO body) throws ApiException {
        create1WithHttpInfo(body);
    }

    /**
     * Create a tag
     * 
     * @param body  (optional)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Void> create1WithHttpInfo(TagXO body) throws ApiException {
        com.squareup.okhttp.Call call = create1ValidateBeforeCall(body, null, null);
        return apiClient.execute(call);
    }

    /**
     * Create a tag (asynchronously)
     * 
     * @param body  (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call create1Async(TagXO body, final ApiCallback<Void> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = create1ValidateBeforeCall(body, progressListener, progressRequestListener);
        apiClient.executeAsync(call, callback);
        return call;
    }
    /**
     * Build call for delete2
     * @param name Name of the tag to delete (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call delete2Call(String name, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/v1/tags/{name}"
            .replaceAll("\\{" + "name" + "\\}", apiClient.escapeString(name.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call delete2ValidateBeforeCall(String name, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'name' is set
        if (name == null) {
            throw new ApiException("Missing the required parameter 'name' when calling delete2(Async)");
        }
        
        com.squareup.okhttp.Call call = delete2Call(name, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Delete a tag
     * 
     * @param name Name of the tag to delete (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public void delete2(String name) throws ApiException {
        delete2WithHttpInfo(name);
    }

    /**
     * Delete a tag
     * 
     * @param name Name of the tag to delete (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Void> delete2WithHttpInfo(String name) throws ApiException {
        com.squareup.okhttp.Call call = delete2ValidateBeforeCall(name, null, null);
        return apiClient.execute(call);
    }

    /**
     * Delete a tag (asynchronously)
     * 
     * @param name Name of the tag to delete (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call delete2Async(String name, final ApiCallback<Void> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = delete2ValidateBeforeCall(name, progressListener, progressRequestListener);
        apiClient.executeAsync(call, callback);
        return call;
    }
    /**
     * Build call for disassociate
     * @param tagName Tag to associate to the matched components (required)
     * @param q Query by keyword (optional)
     * @param repository Repository name (optional)
     * @param format Query by format (optional)
     * @param group Component group (optional)
     * @param name Component name (optional)
     * @param version Component version (optional)
     * @param md5 Specific MD5 hash of component&#x27;s asset (optional)
     * @param sha1 Specific SHA-1 hash of component&#x27;s asset (optional)
     * @param sha256 Specific SHA-256 hash of component&#x27;s asset (optional)
     * @param sha512 Specific SHA-512 hash of component&#x27;s asset (optional)
     * @param prerelease Prerelease version flag (optional)
     * @param conanBaseVersion baseVersion (optional)
     * @param conanChannel channel (optional)
     * @param dockerImageName Docker image name (optional)
     * @param dockerImageTag Docker image tag (optional)
     * @param dockerLayerId Docker layer ID (optional)
     * @param dockerContentDigest Docker content digest (optional)
     * @param mavenGroupId Maven groupId (optional)
     * @param mavenArtifactId Maven artifactId (optional)
     * @param mavenBaseVersion Maven base version (optional)
     * @param mavenExtension Maven extension of component&#x27;s asset (optional)
     * @param mavenClassifier Maven classifier of component&#x27;s asset (optional)
     * @param npmScope npm scope (optional)
     * @param nugetId NuGet id (optional)
     * @param nugetTags NuGet tags (optional)
     * @param p2PluginName p2 plugin name (optional)
     * @param pypiClassifiers PyPI classifiers (optional)
     * @param pypiDescription PyPI description (optional)
     * @param pypiKeywords PyPI keywords (optional)
     * @param pypiSummary PyPI summary (optional)
     * @param rubygemsDescription RubyGems description (optional)
     * @param rubygemsPlatform RubyGems platform (optional)
     * @param rubygemsSummary RubyGems summary (optional)
     * @param tag Component tag (optional)
     * @param yumArchitecture Yum architecture (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call disassociateCall(String tagName, String q, String repository, String format, String group, String name, String version, String md5, String sha1, String sha256, String sha512, String prerelease, String conanBaseVersion, String conanChannel, String dockerImageName, String dockerImageTag, String dockerLayerId, String dockerContentDigest, String mavenGroupId, String mavenArtifactId, String mavenBaseVersion, String mavenExtension, String mavenClassifier, String npmScope, String nugetId, String nugetTags, String p2PluginName, String pypiClassifiers, String pypiDescription, String pypiKeywords, String pypiSummary, String rubygemsDescription, String rubygemsPlatform, String rubygemsSummary, String tag, String yumArchitecture, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/v1/tags/associate/{tagName}"
            .replaceAll("\\{" + "tagName" + "\\}", apiClient.escapeString(tagName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (q != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("q", q));
        if (repository != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("repository", repository));
        if (format != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("format", format));
        if (group != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("group", group));
        if (name != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("name", name));
        if (version != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("version", version));
        if (md5 != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("md5", md5));
        if (sha1 != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("sha1", sha1));
        if (sha256 != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("sha256", sha256));
        if (sha512 != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("sha512", sha512));
        if (prerelease != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("prerelease", prerelease));
        if (conanBaseVersion != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("conan.baseVersion", conanBaseVersion));
        if (conanChannel != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("conan.channel", conanChannel));
        if (dockerImageName != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("docker.imageName", dockerImageName));
        if (dockerImageTag != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("docker.imageTag", dockerImageTag));
        if (dockerLayerId != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("docker.layerId", dockerLayerId));
        if (dockerContentDigest != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("docker.contentDigest", dockerContentDigest));
        if (mavenGroupId != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("maven.groupId", mavenGroupId));
        if (mavenArtifactId != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("maven.artifactId", mavenArtifactId));
        if (mavenBaseVersion != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("maven.baseVersion", mavenBaseVersion));
        if (mavenExtension != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("maven.extension", mavenExtension));
        if (mavenClassifier != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("maven.classifier", mavenClassifier));
        if (npmScope != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("npm.scope", npmScope));
        if (nugetId != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("nuget.id", nugetId));
        if (nugetTags != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("nuget.tags", nugetTags));
        if (p2PluginName != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("p2.pluginName", p2PluginName));
        if (pypiClassifiers != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("pypi.classifiers", pypiClassifiers));
        if (pypiDescription != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("pypi.description", pypiDescription));
        if (pypiKeywords != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("pypi.keywords", pypiKeywords));
        if (pypiSummary != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("pypi.summary", pypiSummary));
        if (rubygemsDescription != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("rubygems.description", rubygemsDescription));
        if (rubygemsPlatform != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("rubygems.platform", rubygemsPlatform));
        if (rubygemsSummary != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("rubygems.summary", rubygemsSummary));
        if (tag != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("tag", tag));
        if (yumArchitecture != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("yum.architecture", yumArchitecture));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call disassociateValidateBeforeCall(String tagName, String q, String repository, String format, String group, String name, String version, String md5, String sha1, String sha256, String sha512, String prerelease, String conanBaseVersion, String conanChannel, String dockerImageName, String dockerImageTag, String dockerLayerId, String dockerContentDigest, String mavenGroupId, String mavenArtifactId, String mavenBaseVersion, String mavenExtension, String mavenClassifier, String npmScope, String nugetId, String nugetTags, String p2PluginName, String pypiClassifiers, String pypiDescription, String pypiKeywords, String pypiSummary, String rubygemsDescription, String rubygemsPlatform, String rubygemsSummary, String tag, String yumArchitecture, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'tagName' is set
        if (tagName == null) {
            throw new ApiException("Missing the required parameter 'tagName' when calling disassociate(Async)");
        }
        
        com.squareup.okhttp.Call call = disassociateCall(tagName, q, repository, format, group, name, version, md5, sha1, sha256, sha512, prerelease, conanBaseVersion, conanChannel, dockerImageName, dockerImageTag, dockerLayerId, dockerContentDigest, mavenGroupId, mavenArtifactId, mavenBaseVersion, mavenExtension, mavenClassifier, npmScope, nugetId, nugetTags, p2PluginName, pypiClassifiers, pypiDescription, pypiKeywords, pypiSummary, rubygemsDescription, rubygemsPlatform, rubygemsSummary, tag, yumArchitecture, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Disassociate components from a tag
     * 
     * @param tagName Tag to associate to the matched components (required)
     * @param q Query by keyword (optional)
     * @param repository Repository name (optional)
     * @param format Query by format (optional)
     * @param group Component group (optional)
     * @param name Component name (optional)
     * @param version Component version (optional)
     * @param md5 Specific MD5 hash of component&#x27;s asset (optional)
     * @param sha1 Specific SHA-1 hash of component&#x27;s asset (optional)
     * @param sha256 Specific SHA-256 hash of component&#x27;s asset (optional)
     * @param sha512 Specific SHA-512 hash of component&#x27;s asset (optional)
     * @param prerelease Prerelease version flag (optional)
     * @param conanBaseVersion baseVersion (optional)
     * @param conanChannel channel (optional)
     * @param dockerImageName Docker image name (optional)
     * @param dockerImageTag Docker image tag (optional)
     * @param dockerLayerId Docker layer ID (optional)
     * @param dockerContentDigest Docker content digest (optional)
     * @param mavenGroupId Maven groupId (optional)
     * @param mavenArtifactId Maven artifactId (optional)
     * @param mavenBaseVersion Maven base version (optional)
     * @param mavenExtension Maven extension of component&#x27;s asset (optional)
     * @param mavenClassifier Maven classifier of component&#x27;s asset (optional)
     * @param npmScope npm scope (optional)
     * @param nugetId NuGet id (optional)
     * @param nugetTags NuGet tags (optional)
     * @param p2PluginName p2 plugin name (optional)
     * @param pypiClassifiers PyPI classifiers (optional)
     * @param pypiDescription PyPI description (optional)
     * @param pypiKeywords PyPI keywords (optional)
     * @param pypiSummary PyPI summary (optional)
     * @param rubygemsDescription RubyGems description (optional)
     * @param rubygemsPlatform RubyGems platform (optional)
     * @param rubygemsSummary RubyGems summary (optional)
     * @param tag Component tag (optional)
     * @param yumArchitecture Yum architecture (optional)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public void disassociate(String tagName, String q, String repository, String format, String group, String name, String version, String md5, String sha1, String sha256, String sha512, String prerelease, String conanBaseVersion, String conanChannel, String dockerImageName, String dockerImageTag, String dockerLayerId, String dockerContentDigest, String mavenGroupId, String mavenArtifactId, String mavenBaseVersion, String mavenExtension, String mavenClassifier, String npmScope, String nugetId, String nugetTags, String p2PluginName, String pypiClassifiers, String pypiDescription, String pypiKeywords, String pypiSummary, String rubygemsDescription, String rubygemsPlatform, String rubygemsSummary, String tag, String yumArchitecture) throws ApiException {
        disassociateWithHttpInfo(tagName, q, repository, format, group, name, version, md5, sha1, sha256, sha512, prerelease, conanBaseVersion, conanChannel, dockerImageName, dockerImageTag, dockerLayerId, dockerContentDigest, mavenGroupId, mavenArtifactId, mavenBaseVersion, mavenExtension, mavenClassifier, npmScope, nugetId, nugetTags, p2PluginName, pypiClassifiers, pypiDescription, pypiKeywords, pypiSummary, rubygemsDescription, rubygemsPlatform, rubygemsSummary, tag, yumArchitecture);
    }

    /**
     * Disassociate components from a tag
     * 
     * @param tagName Tag to associate to the matched components (required)
     * @param q Query by keyword (optional)
     * @param repository Repository name (optional)
     * @param format Query by format (optional)
     * @param group Component group (optional)
     * @param name Component name (optional)
     * @param version Component version (optional)
     * @param md5 Specific MD5 hash of component&#x27;s asset (optional)
     * @param sha1 Specific SHA-1 hash of component&#x27;s asset (optional)
     * @param sha256 Specific SHA-256 hash of component&#x27;s asset (optional)
     * @param sha512 Specific SHA-512 hash of component&#x27;s asset (optional)
     * @param prerelease Prerelease version flag (optional)
     * @param conanBaseVersion baseVersion (optional)
     * @param conanChannel channel (optional)
     * @param dockerImageName Docker image name (optional)
     * @param dockerImageTag Docker image tag (optional)
     * @param dockerLayerId Docker layer ID (optional)
     * @param dockerContentDigest Docker content digest (optional)
     * @param mavenGroupId Maven groupId (optional)
     * @param mavenArtifactId Maven artifactId (optional)
     * @param mavenBaseVersion Maven base version (optional)
     * @param mavenExtension Maven extension of component&#x27;s asset (optional)
     * @param mavenClassifier Maven classifier of component&#x27;s asset (optional)
     * @param npmScope npm scope (optional)
     * @param nugetId NuGet id (optional)
     * @param nugetTags NuGet tags (optional)
     * @param p2PluginName p2 plugin name (optional)
     * @param pypiClassifiers PyPI classifiers (optional)
     * @param pypiDescription PyPI description (optional)
     * @param pypiKeywords PyPI keywords (optional)
     * @param pypiSummary PyPI summary (optional)
     * @param rubygemsDescription RubyGems description (optional)
     * @param rubygemsPlatform RubyGems platform (optional)
     * @param rubygemsSummary RubyGems summary (optional)
     * @param tag Component tag (optional)
     * @param yumArchitecture Yum architecture (optional)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Void> disassociateWithHttpInfo(String tagName, String q, String repository, String format, String group, String name, String version, String md5, String sha1, String sha256, String sha512, String prerelease, String conanBaseVersion, String conanChannel, String dockerImageName, String dockerImageTag, String dockerLayerId, String dockerContentDigest, String mavenGroupId, String mavenArtifactId, String mavenBaseVersion, String mavenExtension, String mavenClassifier, String npmScope, String nugetId, String nugetTags, String p2PluginName, String pypiClassifiers, String pypiDescription, String pypiKeywords, String pypiSummary, String rubygemsDescription, String rubygemsPlatform, String rubygemsSummary, String tag, String yumArchitecture) throws ApiException {
        com.squareup.okhttp.Call call = disassociateValidateBeforeCall(tagName, q, repository, format, group, name, version, md5, sha1, sha256, sha512, prerelease, conanBaseVersion, conanChannel, dockerImageName, dockerImageTag, dockerLayerId, dockerContentDigest, mavenGroupId, mavenArtifactId, mavenBaseVersion, mavenExtension, mavenClassifier, npmScope, nugetId, nugetTags, p2PluginName, pypiClassifiers, pypiDescription, pypiKeywords, pypiSummary, rubygemsDescription, rubygemsPlatform, rubygemsSummary, tag, yumArchitecture, null, null);
        return apiClient.execute(call);
    }

    /**
     * Disassociate components from a tag (asynchronously)
     * 
     * @param tagName Tag to associate to the matched components (required)
     * @param q Query by keyword (optional)
     * @param repository Repository name (optional)
     * @param format Query by format (optional)
     * @param group Component group (optional)
     * @param name Component name (optional)
     * @param version Component version (optional)
     * @param md5 Specific MD5 hash of component&#x27;s asset (optional)
     * @param sha1 Specific SHA-1 hash of component&#x27;s asset (optional)
     * @param sha256 Specific SHA-256 hash of component&#x27;s asset (optional)
     * @param sha512 Specific SHA-512 hash of component&#x27;s asset (optional)
     * @param prerelease Prerelease version flag (optional)
     * @param conanBaseVersion baseVersion (optional)
     * @param conanChannel channel (optional)
     * @param dockerImageName Docker image name (optional)
     * @param dockerImageTag Docker image tag (optional)
     * @param dockerLayerId Docker layer ID (optional)
     * @param dockerContentDigest Docker content digest (optional)
     * @param mavenGroupId Maven groupId (optional)
     * @param mavenArtifactId Maven artifactId (optional)
     * @param mavenBaseVersion Maven base version (optional)
     * @param mavenExtension Maven extension of component&#x27;s asset (optional)
     * @param mavenClassifier Maven classifier of component&#x27;s asset (optional)
     * @param npmScope npm scope (optional)
     * @param nugetId NuGet id (optional)
     * @param nugetTags NuGet tags (optional)
     * @param p2PluginName p2 plugin name (optional)
     * @param pypiClassifiers PyPI classifiers (optional)
     * @param pypiDescription PyPI description (optional)
     * @param pypiKeywords PyPI keywords (optional)
     * @param pypiSummary PyPI summary (optional)
     * @param rubygemsDescription RubyGems description (optional)
     * @param rubygemsPlatform RubyGems platform (optional)
     * @param rubygemsSummary RubyGems summary (optional)
     * @param tag Component tag (optional)
     * @param yumArchitecture Yum architecture (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call disassociateAsync(String tagName, String q, String repository, String format, String group, String name, String version, String md5, String sha1, String sha256, String sha512, String prerelease, String conanBaseVersion, String conanChannel, String dockerImageName, String dockerImageTag, String dockerLayerId, String dockerContentDigest, String mavenGroupId, String mavenArtifactId, String mavenBaseVersion, String mavenExtension, String mavenClassifier, String npmScope, String nugetId, String nugetTags, String p2PluginName, String pypiClassifiers, String pypiDescription, String pypiKeywords, String pypiSummary, String rubygemsDescription, String rubygemsPlatform, String rubygemsSummary, String tag, String yumArchitecture, final ApiCallback<Void> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = disassociateValidateBeforeCall(tagName, q, repository, format, group, name, version, md5, sha1, sha256, sha512, prerelease, conanBaseVersion, conanChannel, dockerImageName, dockerImageTag, dockerLayerId, dockerContentDigest, mavenGroupId, mavenArtifactId, mavenBaseVersion, mavenExtension, mavenClassifier, npmScope, nugetId, nugetTags, p2PluginName, pypiClassifiers, pypiDescription, pypiKeywords, pypiSummary, rubygemsDescription, rubygemsPlatform, rubygemsSummary, tag, yumArchitecture, progressListener, progressRequestListener);
        apiClient.executeAsync(call, callback);
        return call;
    }
    /**
     * Build call for get3
     * @param name Name of the tag to retrieve (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call get3Call(String name, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/v1/tags/{name}"
            .replaceAll("\\{" + "name" + "\\}", apiClient.escapeString(name.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call get3ValidateBeforeCall(String name, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'name' is set
        if (name == null) {
            throw new ApiException("Missing the required parameter 'name' when calling get3(Async)");
        }
        
        com.squareup.okhttp.Call call = get3Call(name, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Get a tag
     * 
     * @param name Name of the tag to retrieve (required)
     * @return TagXO
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public TagXO get3(String name) throws ApiException {
        ApiResponse<TagXO> resp = get3WithHttpInfo(name);
        return resp.getData();
    }

    /**
     * Get a tag
     * 
     * @param name Name of the tag to retrieve (required)
     * @return ApiResponse&lt;TagXO&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<TagXO> get3WithHttpInfo(String name) throws ApiException {
        com.squareup.okhttp.Call call = get3ValidateBeforeCall(name, null, null);
        Type localVarReturnType = new TypeToken<TagXO>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get a tag (asynchronously)
     * 
     * @param name Name of the tag to retrieve (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call get3Async(String name, final ApiCallback<TagXO> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = get3ValidateBeforeCall(name, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<TagXO>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for getTags
     * @param continuationToken A token returned by a prior request. If present, the next page of results are returned (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call getTagsCall(String continuationToken, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/v1/tags";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (continuationToken != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("continuationToken", continuationToken));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call getTagsValidateBeforeCall(String continuationToken, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        com.squareup.okhttp.Call call = getTagsCall(continuationToken, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * List tags
     * 
     * @param continuationToken A token returned by a prior request. If present, the next page of results are returned (optional)
     * @return PageTagXO
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public PageTagXO getTags(String continuationToken) throws ApiException {
        ApiResponse<PageTagXO> resp = getTagsWithHttpInfo(continuationToken);
        return resp.getData();
    }

    /**
     * List tags
     * 
     * @param continuationToken A token returned by a prior request. If present, the next page of results are returned (optional)
     * @return ApiResponse&lt;PageTagXO&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<PageTagXO> getTagsWithHttpInfo(String continuationToken) throws ApiException {
        com.squareup.okhttp.Call call = getTagsValidateBeforeCall(continuationToken, null, null);
        Type localVarReturnType = new TypeToken<PageTagXO>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * List tags (asynchronously)
     * 
     * @param continuationToken A token returned by a prior request. If present, the next page of results are returned (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call getTagsAsync(String continuationToken, final ApiCallback<PageTagXO> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = getTagsValidateBeforeCall(continuationToken, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<PageTagXO>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for replace
     * @param name  (required)
     * @param body  (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call replaceCall(String name, BaseTagXO body, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = body;
        
        // create path and map variables
        String localVarPath = "/v1/tags/{name}"
            .replaceAll("\\{" + "name" + "\\}", apiClient.escapeString(name.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call replaceValidateBeforeCall(String name, BaseTagXO body, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'name' is set
        if (name == null) {
            throw new ApiException("Missing the required parameter 'name' when calling replace(Async)");
        }
        
        com.squareup.okhttp.Call call = replaceCall(name, body, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Update a tags attributes
     * 
     * @param name  (required)
     * @param body  (optional)
     * @return TagXO
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public TagXO replace(String name, BaseTagXO body) throws ApiException {
        ApiResponse<TagXO> resp = replaceWithHttpInfo(name, body);
        return resp.getData();
    }

    /**
     * Update a tags attributes
     * 
     * @param name  (required)
     * @param body  (optional)
     * @return ApiResponse&lt;TagXO&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<TagXO> replaceWithHttpInfo(String name, BaseTagXO body) throws ApiException {
        com.squareup.okhttp.Call call = replaceValidateBeforeCall(name, body, null, null);
        Type localVarReturnType = new TypeToken<TagXO>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Update a tags attributes (asynchronously)
     * 
     * @param name  (required)
     * @param body  (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call replaceAsync(String name, BaseTagXO body, final ApiCallback<TagXO> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = replaceValidateBeforeCall(name, body, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<TagXO>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
}
