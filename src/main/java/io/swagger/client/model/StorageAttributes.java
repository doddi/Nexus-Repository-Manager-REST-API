/*
 * Nexus Repository Manager REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.27.0-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * StorageAttributes
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-08-24T10:46:41.519+01:00[Europe/London]")
public class StorageAttributes {
  @SerializedName("blobStoreName")
  private String blobStoreName = null;

  @SerializedName("strictContentTypeValidation")
  private Boolean strictContentTypeValidation = null;

  public StorageAttributes blobStoreName(String blobStoreName) {
    this.blobStoreName = blobStoreName;
    return this;
  }

   /**
   * Blob store used to store repository contents
   * @return blobStoreName
  **/
  @Schema(example = "default", description = "Blob store used to store repository contents")
  public String getBlobStoreName() {
    return blobStoreName;
  }

  public void setBlobStoreName(String blobStoreName) {
    this.blobStoreName = blobStoreName;
  }

  public StorageAttributes strictContentTypeValidation(Boolean strictContentTypeValidation) {
    this.strictContentTypeValidation = strictContentTypeValidation;
    return this;
  }

   /**
   * Whether to validate uploaded content&#x27;s MIME type appropriate for the repository format
   * @return strictContentTypeValidation
  **/
  @Schema(example = "true", required = true, description = "Whether to validate uploaded content's MIME type appropriate for the repository format")
  public Boolean isStrictContentTypeValidation() {
    return strictContentTypeValidation;
  }

  public void setStrictContentTypeValidation(Boolean strictContentTypeValidation) {
    this.strictContentTypeValidation = strictContentTypeValidation;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StorageAttributes storageAttributes = (StorageAttributes) o;
    return Objects.equals(this.blobStoreName, storageAttributes.blobStoreName) &&
        Objects.equals(this.strictContentTypeValidation, storageAttributes.strictContentTypeValidation);
  }

  @Override
  public int hashCode() {
    return Objects.hash(blobStoreName, strictContentTypeValidation);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StorageAttributes {\n");
    
    sb.append("    blobStoreName: ").append(toIndentedString(blobStoreName)).append("\n");
    sb.append("    strictContentTypeValidation: ").append(toIndentedString(strictContentTypeValidation)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
