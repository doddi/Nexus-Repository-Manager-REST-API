/*
 * Nexus Repository Manager REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.27.0-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.UploadFieldDefinitionXO;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * UploadDefinitionXO
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-08-24T10:46:41.519+01:00[Europe/London]")
public class UploadDefinitionXO {
  @SerializedName("format")
  private String format = null;

  @SerializedName("multipleUpload")
  private Boolean multipleUpload = null;

  @SerializedName("componentFields")
  private List<UploadFieldDefinitionXO> componentFields = null;

  @SerializedName("assetFields")
  private List<UploadFieldDefinitionXO> assetFields = null;

  public UploadDefinitionXO format(String format) {
    this.format = format;
    return this;
  }

   /**
   * Get format
   * @return format
  **/
  @Schema(description = "")
  public String getFormat() {
    return format;
  }

  public void setFormat(String format) {
    this.format = format;
  }

  public UploadDefinitionXO multipleUpload(Boolean multipleUpload) {
    this.multipleUpload = multipleUpload;
    return this;
  }

   /**
   * Get multipleUpload
   * @return multipleUpload
  **/
  @Schema(description = "")
  public Boolean isMultipleUpload() {
    return multipleUpload;
  }

  public void setMultipleUpload(Boolean multipleUpload) {
    this.multipleUpload = multipleUpload;
  }

  public UploadDefinitionXO componentFields(List<UploadFieldDefinitionXO> componentFields) {
    this.componentFields = componentFields;
    return this;
  }

  public UploadDefinitionXO addComponentFieldsItem(UploadFieldDefinitionXO componentFieldsItem) {
    if (this.componentFields == null) {
      this.componentFields = new ArrayList<UploadFieldDefinitionXO>();
    }
    this.componentFields.add(componentFieldsItem);
    return this;
  }

   /**
   * Get componentFields
   * @return componentFields
  **/
  @Schema(description = "")
  public List<UploadFieldDefinitionXO> getComponentFields() {
    return componentFields;
  }

  public void setComponentFields(List<UploadFieldDefinitionXO> componentFields) {
    this.componentFields = componentFields;
  }

  public UploadDefinitionXO assetFields(List<UploadFieldDefinitionXO> assetFields) {
    this.assetFields = assetFields;
    return this;
  }

  public UploadDefinitionXO addAssetFieldsItem(UploadFieldDefinitionXO assetFieldsItem) {
    if (this.assetFields == null) {
      this.assetFields = new ArrayList<UploadFieldDefinitionXO>();
    }
    this.assetFields.add(assetFieldsItem);
    return this;
  }

   /**
   * Get assetFields
   * @return assetFields
  **/
  @Schema(description = "")
  public List<UploadFieldDefinitionXO> getAssetFields() {
    return assetFields;
  }

  public void setAssetFields(List<UploadFieldDefinitionXO> assetFields) {
    this.assetFields = assetFields;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UploadDefinitionXO uploadDefinitionXO = (UploadDefinitionXO) o;
    return Objects.equals(this.format, uploadDefinitionXO.format) &&
        Objects.equals(this.multipleUpload, uploadDefinitionXO.multipleUpload) &&
        Objects.equals(this.componentFields, uploadDefinitionXO.componentFields) &&
        Objects.equals(this.assetFields, uploadDefinitionXO.assetFields);
  }

  @Override
  public int hashCode() {
    return Objects.hash(format, multipleUpload, componentFields, assetFields);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UploadDefinitionXO {\n");
    
    sb.append("    format: ").append(toIndentedString(format)).append("\n");
    sb.append("    multipleUpload: ").append(toIndentedString(multipleUpload)).append("\n");
    sb.append("    componentFields: ").append(toIndentedString(componentFields)).append("\n");
    sb.append("    assetFields: ").append(toIndentedString(assetFields)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
