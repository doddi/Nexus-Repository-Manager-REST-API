/*
 * Nexus Repository Manager REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.27.0-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * ApiPrivilegeScriptRequest
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-08-24T10:46:41.519+01:00[Europe/London]")
public class ApiPrivilegeScriptRequest {
  @SerializedName("name")
  private String name = null;

  @SerializedName("description")
  private String description = null;

  /**
   * Gets or Sets actions
   */
  @JsonAdapter(ActionsEnum.Adapter.class)
  public enum ActionsEnum {
    READ("READ"),
    BROWSE("BROWSE"),
    EDIT("EDIT"),
    ADD("ADD"),
    DELETE("DELETE"),
    RUN("RUN"),
    ASSOCIATE("ASSOCIATE"),
    DISASSOCIATE("DISASSOCIATE"),
    ALL("ALL");

    private String value;

    ActionsEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static ActionsEnum fromValue(String text) {
      for (ActionsEnum b : ActionsEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<ActionsEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ActionsEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ActionsEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return ActionsEnum.fromValue(String.valueOf(value));
      }
    }
  }  @SerializedName("actions")
  private List<ActionsEnum> actions = null;

  @SerializedName("scriptName")
  private String scriptName = null;

  public ApiPrivilegeScriptRequest name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The name of the privilege.  This value cannot be changed.
   * @return name
  **/
  @Schema(description = "The name of the privilege.  This value cannot be changed.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public ApiPrivilegeScriptRequest description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public ApiPrivilegeScriptRequest actions(List<ActionsEnum> actions) {
    this.actions = actions;
    return this;
  }

  public ApiPrivilegeScriptRequest addActionsItem(ActionsEnum actionsItem) {
    if (this.actions == null) {
      this.actions = new ArrayList<ActionsEnum>();
    }
    this.actions.add(actionsItem);
    return this;
  }

   /**
   * A collection of actions to associate with the privilege, using BREAD syntax (browse,read,edit,add,delete,all) as well as &#x27;run&#x27; for script privileges.
   * @return actions
  **/
  @Schema(description = "A collection of actions to associate with the privilege, using BREAD syntax (browse,read,edit,add,delete,all) as well as 'run' for script privileges.")
  public List<ActionsEnum> getActions() {
    return actions;
  }

  public void setActions(List<ActionsEnum> actions) {
    this.actions = actions;
  }

  public ApiPrivilegeScriptRequest scriptName(String scriptName) {
    this.scriptName = scriptName;
    return this;
  }

   /**
   * The name of a script to give access to.
   * @return scriptName
  **/
  @Schema(description = "The name of a script to give access to.")
  public String getScriptName() {
    return scriptName;
  }

  public void setScriptName(String scriptName) {
    this.scriptName = scriptName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApiPrivilegeScriptRequest apiPrivilegeScriptRequest = (ApiPrivilegeScriptRequest) o;
    return Objects.equals(this.name, apiPrivilegeScriptRequest.name) &&
        Objects.equals(this.description, apiPrivilegeScriptRequest.description) &&
        Objects.equals(this.actions, apiPrivilegeScriptRequest.actions) &&
        Objects.equals(this.scriptName, apiPrivilegeScriptRequest.scriptName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, description, actions, scriptName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApiPrivilegeScriptRequest {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    actions: ").append(toIndentedString(actions)).append("\n");
    sb.append("    scriptName: ").append(toIndentedString(scriptName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
