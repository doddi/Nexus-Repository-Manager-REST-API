/*
 * Nexus Repository Manager REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.27.0-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.BaseTagXO;
import io.swagger.client.model.PageTagXO;
import io.swagger.client.model.TagXO;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TagsApi
 */
@Ignore
public class TagsApiTest {

    private final TagsApi api = new TagsApi();

    /**
     * Associate components with a tag
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void associateTest() throws ApiException {
        String tagName = null;
        Boolean wait = null;
        String q = null;
        String repository = null;
        String format = null;
        String group = null;
        String name = null;
        String version = null;
        String md5 = null;
        String sha1 = null;
        String sha256 = null;
        String sha512 = null;
        String prerelease = null;
        String conanBaseVersion = null;
        String conanChannel = null;
        String dockerImageName = null;
        String dockerImageTag = null;
        String dockerLayerId = null;
        String dockerContentDigest = null;
        String mavenGroupId = null;
        String mavenArtifactId = null;
        String mavenBaseVersion = null;
        String mavenExtension = null;
        String mavenClassifier = null;
        String npmScope = null;
        String nugetId = null;
        String nugetTags = null;
        String p2PluginName = null;
        String pypiClassifiers = null;
        String pypiDescription = null;
        String pypiKeywords = null;
        String pypiSummary = null;
        String rubygemsDescription = null;
        String rubygemsPlatform = null;
        String rubygemsSummary = null;
        String tag = null;
        String yumArchitecture = null;
        api.associate(tagName, wait, q, repository, format, group, name, version, md5, sha1, sha256, sha512, prerelease, conanBaseVersion, conanChannel, dockerImageName, dockerImageTag, dockerLayerId, dockerContentDigest, mavenGroupId, mavenArtifactId, mavenBaseVersion, mavenExtension, mavenClassifier, npmScope, nugetId, nugetTags, p2PluginName, pypiClassifiers, pypiDescription, pypiKeywords, pypiSummary, rubygemsDescription, rubygemsPlatform, rubygemsSummary, tag, yumArchitecture);

        // TODO: test validations
    }
    /**
     * Create a tag
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void create1Test() throws ApiException {
        TagXO body = null;
        api.create1(body);

        // TODO: test validations
    }
    /**
     * Delete a tag
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void delete2Test() throws ApiException {
        String name = null;
        api.delete2(name);

        // TODO: test validations
    }
    /**
     * Disassociate components from a tag
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void disassociateTest() throws ApiException {
        String tagName = null;
        String q = null;
        String repository = null;
        String format = null;
        String group = null;
        String name = null;
        String version = null;
        String md5 = null;
        String sha1 = null;
        String sha256 = null;
        String sha512 = null;
        String prerelease = null;
        String conanBaseVersion = null;
        String conanChannel = null;
        String dockerImageName = null;
        String dockerImageTag = null;
        String dockerLayerId = null;
        String dockerContentDigest = null;
        String mavenGroupId = null;
        String mavenArtifactId = null;
        String mavenBaseVersion = null;
        String mavenExtension = null;
        String mavenClassifier = null;
        String npmScope = null;
        String nugetId = null;
        String nugetTags = null;
        String p2PluginName = null;
        String pypiClassifiers = null;
        String pypiDescription = null;
        String pypiKeywords = null;
        String pypiSummary = null;
        String rubygemsDescription = null;
        String rubygemsPlatform = null;
        String rubygemsSummary = null;
        String tag = null;
        String yumArchitecture = null;
        api.disassociate(tagName, q, repository, format, group, name, version, md5, sha1, sha256, sha512, prerelease, conanBaseVersion, conanChannel, dockerImageName, dockerImageTag, dockerLayerId, dockerContentDigest, mavenGroupId, mavenArtifactId, mavenBaseVersion, mavenExtension, mavenClassifier, npmScope, nugetId, nugetTags, p2PluginName, pypiClassifiers, pypiDescription, pypiKeywords, pypiSummary, rubygemsDescription, rubygemsPlatform, rubygemsSummary, tag, yumArchitecture);

        // TODO: test validations
    }
    /**
     * Get a tag
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void get3Test() throws ApiException {
        String name = null;
        TagXO response = api.get3(name);

        // TODO: test validations
    }
    /**
     * List tags
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getTagsTest() throws ApiException {
        String continuationToken = null;
        PageTagXO response = api.getTags(continuationToken);

        // TODO: test validations
    }
    /**
     * Update a tags attributes
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void replaceTest() throws ApiException {
        String name = null;
        BaseTagXO body = null;
        TagXO response = api.replace(name, body);

        // TODO: test validations
    }
}
